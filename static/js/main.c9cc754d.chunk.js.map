{"version":3,"sources":["components/panels/ItemRow.jsx","helpers/dataFetchers.js","redux/actions.js","components/hooks/useLoadMovies.jsx","components/panels/ListPanel.jsx","components/panels/SearchBar.jsx","components/panels/ListingPanel.jsx","components/containers/ListingContainer.jsx","components/pages/ListingPage.jsx","redux/reducers.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["ItemRow","ref","movies","indices","style","measure","className","map","index","movie","name","ListItem","src","alt","forwardRef","fetchPage","pageNumber","a","fetch","data","json","jsonData","LOAD_MOVIES","MOVIES_LOADED","SEARCH_MOVIES","REMOVE_SEARCH","moviesLoaded","response","type","payload","useLoadMovies","dispatch","useDispatch","loadMoviesPaged","useCallback","console","log","generateIndexesForRow","rowIndex","maxItemsPerRow","itemsAmount","result","startIndex","i","Math","min","push","cellMeasurerCache","CellMeasurerCache","fixedWidth","defaultHeight","minWidth","ListPanel","infiniteLoaderRef","useRef","loadMovies","useSelector","state","nextPageAvailable","filteredMovies","currentPageNumber","currentPage","isNextPageLoading","isLoading","searchMode","rowCount","hasMore","ceil","getRowsAmount","length","rowRenderer","key","parent","moviesIndices","cache","columnIndex","registerChild","isRowLoaded","allItemsLoaded","loadMoreRows","stopIndex","onRowsRendered","width","height","deferredMeasurementCache","rowHeight","overscanRowCount","noRowsRenderer","memo","SearchBar","useState","searchKey","setSearchKey","useEffect","onClick","onSubmit","event","preventDefault","searchMovie","value","onChange","e","target","onsubmit","ListingPanel","ListingContainer","ListingPage","inititalState","totalItems","rootReducer","action","page","items","content","allMovies","filter","toLowerCase","includes","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9cc754d.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\n\r\n// background-image: url(\"/placeholder_for_missing_posters.png\");\r\n\r\nconst ItemRow = ({ movies, indices, style, measure }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={style}\r\n      className=\"flex flex-1 flex-row justify-around  item-row\"\r\n    >\r\n      {indices.map((index) => {\r\n        const movie = movies[index];\r\n        return (\r\n          <ListItem\r\n            key={`${movie.name}-${index}`}\r\n            movie={movie}\r\n            measure={measure}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListItem = ({ movie, measure }) => {\r\n  return (\r\n    <div className=\" flex flex-col p-1 py-2 item h-full mb-3 item\">\r\n      <div>\r\n          <img\r\n            className=\"image\"\r\n            src={movie[\"poster-image\"]}\r\n            alt={movie.name}\r\n            // onLoad={measure}\r\n          />\r\n      </div>\r\n      <div>\r\n        <span className=\"text-white mt-2 movie-description\">{movie.name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default forwardRef(ItemRow);\r\n","const getPageUrl = (pageNum) => {\r\n  return `CONTENTLISTINGPAGE-PAGE${pageNum}.json`;\r\n};\r\nexport const fetchPage = async (pageNumber) => {\r\n  const data = await fetch(getPageUrl(pageNumber));\r\n  const jsonData = await data.json();\r\n  return jsonData;\r\n};\r\n","export const LOAD_MOVIES = \"LOAD_MOVIES\";\r\nexport const MOVIES_LOADED = \"MOVIES_LOADED\";\r\nexport const SEARCH_MOVIES = \"SEARCH_MOVIES\";\r\nexport const REMOVE_SEARCH = \"REMOVE_SEARCH\";\r\n\r\nexport const loadMovies = () => {\r\n  return {\r\n    type: LOAD_MOVIES,\r\n  };\r\n};\r\n\r\nexport const moviesLoaded = (response) => {\r\n  return {\r\n    type: MOVIES_LOADED,\r\n    payload: response,\r\n  };\r\n};\r\n\r\nexport const searchMovie = (searchKey) => {\r\n  return {\r\n    type: SEARCH_MOVIES,\r\n    payload: searchKey,\r\n  };\r\n}\r\nexport const removeSearch = () => {\r\n  return {\r\n    type: REMOVE_SEARCH,\r\n  };\r\n}","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchPage } from \"../../helpers/dataFetchers\";\r\nimport { loadMovies, moviesLoaded } from \"../../redux/actions\";\r\n\r\nconst useLoadMovies = () => {\r\n  const dispatch = useDispatch();\r\n  const loadMoviesPaged = useCallback(\r\n    async (pageNumber) => {\r\n      dispatch(loadMovies());\r\n      try {\r\n        console.log(\" pagenumber to be loaded : \", pageNumber);\r\n        const response = await fetchPage(pageNumber);\r\n        dispatch(moviesLoaded(response));\r\n      } catch (e) {\r\n        // console.log(e);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n  return loadMoviesPaged;\r\n};\r\n\r\nexport default useLoadMovies;\r\n","import React, { useRef, memo } from \"react\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  InfiniteLoader,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ItemRow from \"./ItemRow\";\r\nimport useLoadMovies from \"../hooks/useLoadMovies\";\r\n\r\nconst COUNT_PER_ROW = 3;\r\n\r\nconst generateIndexesForRow = (rowIndex, maxItemsPerRow, itemsAmount) => {\r\n  const result = [];\r\n  const startIndex = rowIndex * maxItemsPerRow;\r\n\r\n  for (\r\n    let i = startIndex;\r\n    i < Math.min(startIndex + maxItemsPerRow, itemsAmount);\r\n    i++\r\n  ) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst getRowsAmount = (itemsAmount, hasMore, searchMode) => {\r\n  if (searchMode) {\r\n    //do not load next page on search mode\r\n    return Math.ceil(itemsAmount / COUNT_PER_ROW);\r\n  }\r\n  return Math.ceil(itemsAmount / COUNT_PER_ROW) + (hasMore ? 1 : 0);\r\n};\r\n\r\nconst cellMeasurerCache = new CellMeasurerCache({\r\n  fixedWidth: true,\r\n  defaultHeight: 300,\r\n  minWidth: 300,\r\n});\r\n\r\nconst ListPanel = () => {\r\n  const infiniteLoaderRef = useRef();\r\n\r\n  const loadMovies = useLoadMovies();\r\n\r\n  const {\r\n    nextPageAvailable,\r\n    filteredMovies: movies,\r\n    currentPage: currentPageNumber,\r\n    isLoading: isNextPageLoading,\r\n    searchMode,\r\n  } = useSelector((state) => state);\r\n\r\n  const rowCount = getRowsAmount(movies.length, nextPageAvailable, searchMode);\r\n  const rowRenderer = ({ index, key, style, parent }) => {\r\n    const moviesIndices = generateIndexesForRow(\r\n      index,\r\n      COUNT_PER_ROW,\r\n      movies.length\r\n    );\r\n\r\n    return (\r\n      <CellMeasurer\r\n        key={key}\r\n        cache={cellMeasurerCache}\r\n        parent={parent}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n      >\r\n        {({ registerChild, measure }) => (\r\n          <ItemRow\r\n            measure={measure}\r\n            ref={registerChild}\r\n            key={key}\r\n            movies={movies}\r\n            indices={moviesIndices}\r\n            style={style}\r\n          />\r\n        )}\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto pb-10\">\r\n      <InfiniteLoader\r\n        ref={infiniteLoaderRef}\r\n        isRowLoaded={({ index }) => {\r\n          const allItemsLoaded =\r\n            generateIndexesForRow(index, COUNT_PER_ROW, movies.length).length >\r\n            0;\r\n\r\n          const isRowLoaded = !nextPageAvailable || allItemsLoaded;\r\n          return isRowLoaded;\r\n        }}\r\n        loadMoreRows={({ startIndex, stopIndex }) => {\r\n          if (!isNextPageLoading && nextPageAvailable && !searchMode) {\r\n            loadMovies(currentPageNumber + 1);\r\n          }\r\n        }}\r\n        rowCount={rowCount}\r\n      >\r\n        {({ onRowsRendered, registerChild }) => (\r\n          <div className=\"list-panel\">\r\n            <AutoSizer>\r\n              {({ width, height }) => (\r\n                <List\r\n                  ref={registerChild}\r\n                  onRowsRendered={onRowsRendered}\r\n                  width={width}\r\n                  height={height}\r\n                  rowCount={rowCount}\r\n                  rowRenderer={rowRenderer}\r\n                  deferredMeasurementCache={cellMeasurerCache}\r\n                  rowHeight={cellMeasurerCache.rowHeight}\r\n                  overscanRowCount={10}\r\n                  noRowsRenderer={() => {\r\n                    return (\r\n                      <div className=\"text-white no-records\">\r\n                        No movies found\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n            </AutoSizer>\r\n          </div>\r\n        )}\r\n      </InfiniteLoader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ListPanel);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeSearch, searchMovie } from \"../../redux/actions\";\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const searchMode = useSelector((state) => state.searchMode);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (searchKey === \"\") {\r\n      dispatch(removeSearch());\r\n    }\r\n  }, [searchKey, dispatch]);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    searchKey !== \"\" && dispatch(searchMovie(searchKey));\r\n  };\r\n  return (\r\n    <div className=\"bg-black py-10 flex justify-start items-center header fixed h-10 search-bar w-full\">\r\n      {searchMode && searchKey !== \"\" && (\r\n        <span\r\n          className=\"mr-2 h-1 cursor-pointer icon flex-none\"\r\n          onClick={() => {\r\n            setSearchKey(\"\");\r\n          }}\r\n        >\r\n          <img src=\"Back.png\" alt=\"back arrow\" />\r\n        </span>\r\n      )}\r\n      <div className=\"\">\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 h-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={searchKey}\r\n            onChange={(e) => {\r\n              setSearchKey(e.target.value);\r\n            }}\r\n          />\r\n        </form>\r\n      </div>\r\n      <span className=\"cursor-pointer icon flex-none ml-2\" onClick={onsubmit}>\r\n        <img src=\"search.png\" alt=\"seach button\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { memo } from \"react\";\r\nimport ListPanel from \"./ListPanel\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst ListingPanel = ({ movies }) => {\r\n  return (\r\n    <div className=\"bg-black overflow-x-hidden content-container\">\r\n      <SearchBar />\r\n      <ListPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ListingPanel);\r\n","import React from \"react\";\r\n\r\nimport ListingPanel from \"../panels/ListingPanel\";\r\n\r\nconst ListingContainer = () => {\r\n  return <ListingPanel />;\r\n};\r\n\r\nexport default ListingContainer;\r\n","import React from \"react\";\r\nimport ListingContainer from \"../containers/ListingContainer\";\r\n\r\nconst ListingPage = () => {\r\n  return <ListingContainer />;\r\n};\r\n\r\nexport default ListingPage;\r\n","import {\r\n  LOAD_MOVIES,\r\n  MOVIES_LOADED,\r\n  REMOVE_SEARCH,\r\n  SEARCH_MOVIES,\r\n} from \"./actions\";\r\n\r\nconst inititalState = {\r\n  isLoading: false,\r\n  movies: [],\r\n  filteredMovies: [],\r\n  currentPage: 0,\r\n  totalItems: 0,\r\n  nextPageAvailable: true,\r\n  searchMode: false,\r\n};\r\n\r\nconst rootReducer = (state = inititalState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_MOVIES:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case MOVIES_LOADED:\r\n      const pageNumber = +action.payload.page[\"page-num-requested\"];\r\n      const totalItems = +action.payload.page[\"total-content-items\"];\r\n      const items = action.payload.page[\"content-items\"].content;\r\n      const allMovies = [...state.movies, ...items];\r\n\r\n      return {\r\n        ...state,\r\n        movies: allMovies,\r\n        filteredMovies: allMovies,\r\n        isLoading: false,\r\n        currentPage: pageNumber,\r\n        totalItems: totalItems,\r\n        nextPageAvailable: totalItems - allMovies.length > 0,\r\n      };\r\n\r\n    case SEARCH_MOVIES:\r\n      const filteredMovies = state.movies.filter((movie) =>\r\n        movie.name.toLowerCase().includes(action.payload.toLowerCase())\r\n      );\r\n      return {\r\n        ...state,\r\n        searchMode: true,\r\n        filteredMovies,\r\n      };\r\n    case REMOVE_SEARCH:\r\n      return {\r\n        ...state,\r\n        searchMode: false,\r\n        filteredMovies: state.movies,\r\n      };\r\n    default:\r\n      return inititalState;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport { store };\r\n","import \"./App.css\";\nimport ListingPage from \"./components/pages/ListingPage\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ListingPage />\n      {/* // OUTER DIV */}\n\n      {/* //DATA FETHCING CONTAINER */}\n\n      {/* SERACH OANEL */}\n\n      {/* list grid virtualsed*/}\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}