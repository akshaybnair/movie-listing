{"version":3,"sources":["components/panels/ItemRow.jsx","helpers/dataFetchers.js","redux/actions.js","components/hooks/useLoadMovies.jsx","components/panels/ListPanel.jsx","components/panels/SearchBar.jsx","components/panels/ListingPanel.jsx","components/containers/ListingContainer.jsx","components/pages/ListingPage.jsx","redux/reducers.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","movie","className","src","alt","name","ItemRow","movies","indices","style","map","index","fetchPage","pageNumber","a","fetch","data","json","jsonData","LOAD_MOVIES","MOVIES_LOADED","SEARCH_MOVIES","REMOVE_SEARCH","moviesLoaded","response","type","payload","useLoadMovies","dispatch","useDispatch","loadMoviesPaged","useCallback","console","log","generateIndexesForRow","rowIndex","maxItemsPerRow","itemsAmount","result","startIndex","i","Math","min","push","ListPanel","infiniteLoaderRef","useRef","loadMovies","useSelector","state","nextPageAvailable","filteredMovies","currentPageNumber","currentPage","isNextPageLoading","isLoading","searchMode","rowCount","hasMore","ceil","getRowsAmount","length","rowRenderer","key","moviesIndices","parent","width","ref","isRowLoaded","allItemsLoaded","loadMoreRows","stopIndex","onRowsRendered","registerChild","height","rowHeight","overscanRowCount","noRowsRenderer","memo","SearchBar","useState","searchKey","setSearchKey","useEffect","onClick","value","onChange","e","target","searchMovie","ListingPanel","ListingContainer","ListingPage","inititalState","totalItems","rootReducer","action","page","items","content","allMovies","filter","toLowerCase","includes","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1a7a01c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ItemRow = ({ movies, indices, style }) => {\r\n  return (\r\n    <div\r\n      style={style}\r\n      className=\"flex flex-1 flex-row justify-around mx-3\"\r\n    >\r\n      {indices.map((index) => {\r\n        const movie = movies[index];\r\n        return <ListItem key={`${movie.name}-${index}`} movie={movie} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListItem = ({ movie }) => {\r\n  return (\r\n    <div className=\"w-1/3 flex flex-col p-1 py-2 item h-full mb-3\">\r\n      <div>\r\n        <img src={movie[\"poster-image\"]} alt={movie.name} />\r\n      </div>\r\n      <div>\r\n        <span className=\"text-white mt-2\">{movie.name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemRow;\r\n","const getPageUrl = (pageNum) => {\r\n  return `/CONTENTLISTINGPAGE-PAGE${pageNum}.json`;\r\n};\r\nexport const fetchPage = async (pageNumber) => {\r\n  const data = await fetch(getPageUrl(pageNumber));\r\n  const jsonData = await data.json();\r\n  return jsonData;\r\n};\r\n","export const LOAD_MOVIES = \"LOAD_MOVIES\";\r\nexport const MOVIES_LOADED = \"MOVIES_LOADED\";\r\nexport const SEARCH_MOVIES = \"SEARCH_MOVIES\";\r\nexport const REMOVE_SEARCH = \"REMOVE_SEARCH\";\r\n\r\nexport const loadMovies = () => {\r\n  return {\r\n    type: LOAD_MOVIES,\r\n  };\r\n};\r\n\r\nexport const moviesLoaded = (response) => {\r\n  return {\r\n    type: MOVIES_LOADED,\r\n    payload: response,\r\n  };\r\n};\r\n\r\nexport const searchMovie = (searchKey) => {\r\n  return {\r\n    type: SEARCH_MOVIES,\r\n    payload: searchKey,\r\n  };\r\n}\r\nexport const removeSearch = () => {\r\n  return {\r\n    type: REMOVE_SEARCH,\r\n  };\r\n}","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchPage } from \"../../helpers/dataFetchers\";\r\nimport { loadMovies, moviesLoaded } from \"../../redux/actions\";\r\n\r\nconst useLoadMovies = () => {\r\n  const dispatch = useDispatch();\r\n  const loadMoviesPaged = useCallback(\r\n    async (pageNumber) => {\r\n      dispatch(loadMovies());\r\n      try {\r\n        console.log(\" pagenumber to be loaded : \", pageNumber);\r\n        const response = await fetchPage(pageNumber);\r\n        dispatch(moviesLoaded(response));\r\n      } catch (e) {\r\n        // console.log(e);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n  return loadMoviesPaged;\r\n};\r\n\r\nexport default useLoadMovies;\r\n","import React, { useRef, memo } from \"react\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  InfiniteLoader,\r\n  // CellMeasurer,\r\n  // CellMeasurerCache,\r\n} from \"react-virtualized\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ItemRow from \"./ItemRow\";\r\nimport useLoadMovies from \"../hooks/useLoadMovies\";\r\n\r\nconst COUNT_PER_ROW = 3;\r\n\r\nconst generateIndexesForRow = (rowIndex, maxItemsPerRow, itemsAmount) => {\r\n  const result = [];\r\n  const startIndex = rowIndex * maxItemsPerRow;\r\n\r\n  for (\r\n    let i = startIndex;\r\n    i < Math.min(startIndex + maxItemsPerRow, itemsAmount);\r\n    i++\r\n  ) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst getRowsAmount = (itemsAmount, hasMore, searchMode) => {\r\n  if (searchMode) {\r\n    //do not load next page on search mode\r\n    return Math.ceil(itemsAmount / COUNT_PER_ROW);\r\n  }\r\n  return Math.ceil(itemsAmount / COUNT_PER_ROW) + (hasMore ? 1 : 0);\r\n};\r\n\r\n// const cellMeasurerCache = new CellMeasurerCache({\r\n//   fixedWidth: true,\r\n//   defaultHeight: 300,\r\n//   minWidth: 300,\r\n// });\r\nconst ListPanel = () => {\r\n  const infiniteLoaderRef = useRef();\r\n\r\n  const loadMovies = useLoadMovies();\r\n\r\n  const {\r\n    nextPageAvailable,\r\n    // movies,\r\n    filteredMovies: movies,\r\n    currentPage: currentPageNumber,\r\n    isLoading: isNextPageLoading,\r\n    searchMode,\r\n  } = useSelector((state) => state);\r\n\r\n  const rowCount = getRowsAmount(movies.length, nextPageAvailable, searchMode);\r\n  const rowRenderer = ({ index, key, style, parent }) => {\r\n    const moviesIndices = generateIndexesForRow(\r\n      index,\r\n      COUNT_PER_ROW,\r\n      movies.length\r\n    );\r\n\r\n    return (\r\n      // <CellMeasurer\r\n      //   key={key}\r\n      //   cache={cellMeasurerCache}\r\n      //   parent={parent}\r\n      //   columnIndex={0}\r\n      //   rowIndex={index}\r\n      // >\r\n      //   {({ registerChild }) => (\r\n      <ItemRow\r\n        // ref={registerChild}\r\n        key={key}\r\n        movies={movies}\r\n        indices={moviesIndices}\r\n        style={style}\r\n      />\r\n      //   )}\r\n      // </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"mx-auto mt-10 pt-5 list\"\r\n      style={{\r\n        width: \"calc(100vh - 210px)\",\r\n      }}\r\n    >\r\n      <InfiniteLoader\r\n        ref={infiniteLoaderRef}\r\n        isRowLoaded={({ index }) => {\r\n          const allItemsLoaded =\r\n            generateIndexesForRow(index, COUNT_PER_ROW, movies.length).length >\r\n            0;\r\n\r\n          const isRowLoaded = !nextPageAvailable || allItemsLoaded;\r\n          return isRowLoaded;\r\n        }}\r\n        loadMoreRows={({ startIndex, stopIndex }) => {\r\n          if (!isNextPageLoading && nextPageAvailable && !searchMode) {\r\n            loadMovies(currentPageNumber + 1);\r\n          }\r\n        }}\r\n        rowCount={rowCount}\r\n      >\r\n        {({ onRowsRendered, registerChild }) => (\r\n          <div\r\n            // style={{\r\n            //   width: \"100%\",\r\n            //   height: \"100vh\",\r\n            // }}\r\n            className=\"w-full h-screen\"\r\n          >\r\n            <AutoSizer>\r\n              {({ width, height }) => (\r\n                <List\r\n                  ref={registerChild}\r\n                  onRowsRendered={onRowsRendered}\r\n                  width={width}\r\n                  height={height}\r\n                  rowCount={rowCount}\r\n                  rowRenderer={rowRenderer}\r\n                  // deferredMeasurementCache={cellMeasurerCache}\r\n                  // rowHeight={cellMeasurerCache.rowHeight}\r\n                  rowHeight={350}\r\n                  overscanRowCount={10}\r\n                  noRowsRenderer={() => {\r\n                    <span className=\"text-white\">No movies found</span>;\r\n                  }}\r\n                />\r\n              )}\r\n            </AutoSizer>\r\n          </div>\r\n        )}\r\n      </InfiniteLoader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ListPanel);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeSearch, searchMovie } from \"../../redux/actions\";\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const searchMode = useSelector((state) => state.searchMode);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (searchKey === \"\") {\r\n      dispatch(removeSearch());\r\n    }\r\n  }, [searchKey, dispatch]);\r\n  return (\r\n    <div className=\"flex justify-start align-middle header fixed h-10\">\r\n      {searchMode && searchKey !== \"\" && (\r\n        <span\r\n          className=\"mr-2 h-1 cursor-pointer\"\r\n          onClick={() => {\r\n            setSearchKey(\"\");\r\n          }}\r\n        >\r\n          <img src=\"Back.png\" alt=\"back arrow\" />\r\n        </span>\r\n      )}\r\n      <div className=\"flex flex-1 m-0\">\r\n        <input\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 h-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={searchKey}\r\n          onChange={(e) => {\r\n            setSearchKey(e.target.value);\r\n          }}\r\n        />\r\n        <span\r\n          className=\"ml-2 cursor-pointer\"\r\n          onClick={() => {\r\n            searchKey !== \"\" && dispatch(searchMovie(searchKey));\r\n          }}\r\n        >\r\n          <img src=\"search.png\" alt=\"seach button\" />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { memo } from \"react\";\r\nimport ListPanel from \"./ListPanel\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst ListingPanel = ({ movies }) => {\r\n  return (\r\n    <div className=\"bg-black overflow-x-hidden content-container\">\r\n      <SearchBar />\r\n      <ListPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ListingPanel);\r\n","import React from \"react\";\r\n\r\nimport ListingPanel from \"../panels/ListingPanel\";\r\n\r\nconst ListingContainer = () => {\r\n  return <ListingPanel />;\r\n};\r\n\r\nexport default ListingContainer;\r\n","import React from \"react\";\r\nimport ListingContainer from \"../containers/ListingContainer\";\r\n\r\nconst ListingPage = () => {\r\n  return <ListingContainer />;\r\n};\r\n\r\nexport default ListingPage;\r\n","import {\r\n  LOAD_MOVIES,\r\n  MOVIES_LOADED,\r\n  REMOVE_SEARCH,\r\n  SEARCH_MOVIES,\r\n} from \"./actions\";\r\n\r\nconst inititalState = {\r\n  isLoading: false,\r\n  movies: [],\r\n  filteredMovies: [],\r\n  currentPage: 0,\r\n  totalItems: 0,\r\n  nextPageAvailable: true,\r\n  searchMode: false,\r\n};\r\n\r\nconst rootReducer = (state = inititalState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_MOVIES:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case MOVIES_LOADED:\r\n      const pageNumber = +action.payload.page[\"page-num-requested\"];\r\n      const totalItems = +action.payload.page[\"total-content-items\"];\r\n      const items = action.payload.page[\"content-items\"].content;\r\n      const allMovies = [...state.movies, ...items];\r\n\r\n      return {\r\n        ...state,\r\n        movies: allMovies,\r\n        filteredMovies: allMovies,\r\n        isLoading: false,\r\n        currentPage: pageNumber,\r\n        totalItems: totalItems,\r\n        nextPageAvailable: totalItems - allMovies.length > 0,\r\n      };\r\n\r\n    case SEARCH_MOVIES:\r\n      const filteredMovies = state.movies.filter((movie) =>\r\n        movie.name.toLowerCase().includes(action.payload.toLowerCase())\r\n      );\r\n      console.log(filteredMovies);\r\n      return {\r\n        ...state,\r\n        searchMode: true,\r\n        filteredMovies,\r\n      };\r\n    case REMOVE_SEARCH:\r\n      return {\r\n        ...state,\r\n        searchMode: false,\r\n        filteredMovies: state.movies,\r\n      };\r\n    default:\r\n      return inititalState;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport { store };\r\n","import \"./App.css\";\nimport ListingPage from \"./components/pages/ListingPage\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ListingPage />\n      {/* // OUTER DIV */}\n\n      {/* //DATA FETHCING CONTAINER */}\n\n      {/* SERACH OANEL */}\n\n      {/* list grid virtualsed*/}\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}